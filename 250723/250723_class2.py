# ------ 2025.7/23 (수요일) ------

# 함수
# - 코드를 따로 분리했다.
# 왜? (목적)
# 1. 재사용성 : 코드를 다시 사용하기 위해서
# 2. 가독성 : 기능 별로 함수를 분리하면, 가독성이 매우 높아진다.
#   -> 회사에서는 (코드 리뷰, 리펙토링)을 통해 코드를 잘 관리

# 함수 사용법
# - 정의 (def 키워드)
    # 1. 함수명
    # 2. 파라미터 (매개변수, 인자)
    # 3. 내부 로직

def func():
    # 함수 스코프
    print("func")

# - 호출
#   -> 호출 하는 순간 함수의 메모리가 할당된다.
func()

print("func : 함수 호출 끝")

# ------ 파라미터 (매개변수)

def func2(x, y):
    # 함수 가 외부 데이터를 필요로 할 때
    # 숫자 2개를 합치는 함수
    # -> 숫자 2개가 외부에서 입력을 받았다.
    print(x + y)

def my_input():
    num1 = int(input())
    num2 = int(input())
    return num1, num2

# 1. my_input 이 입력받은 값을 반환해주고
# 2. func 데이터를 받아서 결과를 출력
n1, n2 = my_input()
func(n1, n2)   # -> n1, n2는 func2 안에 있는 x, y에 복사된다.

# -----------------------------

def func3():
    # 함수 스코프 (지역변수)
    print(a, b)

    def func4():
        print("func4")
        print(a, b)
    func4()

# 전역변수
a = int(input())
b = int(input())

func3()